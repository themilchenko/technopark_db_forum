version: '3. 3'
services:
  app1:
    hostname: b1
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - prometheus
      - grafana
    environment:
      PORT: 8081
      METRICS_PORT: 9091

  app2:
    hostname: b2
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - prometheus
      - grafana
    environment:
      PORT: 8082
      METRICS_PORT: 9092

  app3:
    hostname: b3
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - prometheus
      - grafana
    environment:
      PORT: 8083
      METRICS_PORT: 9093

  db:
    hostname: postgresql
    container_name: postgresql
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: forum
      POSTGRES_PASSWORD: forum
      POSTGRES_DB: forum
    volumes:
      - .db/db.sql:/docker-entrypoint-initdb.d/init.sql
      - /var/lib/postgresql/data:/var/lib/postgresql/data

  load-balancer:
    hostname: load-balancer
    depends_on:
      - app1
      - app2
      - app3
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:8080"
  prometheus:
    hostname: prometheus
    image: prom/prometheus:latest
    container_name: vdonate-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - prometheus_data:/prometheus
      - ./configs/prometheus.yaml:/etc/prometheus/prometheus.yaml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=true
    ports:
      - "3000:3000"

volumes:
  prometheus_data: { }
  grafana_data: { }
